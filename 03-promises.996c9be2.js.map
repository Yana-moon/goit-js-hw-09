{"mappings":"qhBAEA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAEC,iBAEF,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAChD,GAAIJ,EAAMK,OAAS,GAAKJ,EAAKI,MAAQ,GAAKH,EAAOG,MAAQ,EACvD,OAAOC,EAAAb,GAASc,OAAOC,QAAQ,yCAA0C,CACvEC,MAAO,UAIX,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAOG,MAAOK,GAAK,EAAG,CACxC,MAAMC,EAAeD,EAAIE,OAAOX,EAAKI,OAASO,OAAOZ,EAAMK,QAiB/D,SAAuBQ,EAAUb,GAC/B,OAAO,IAAIc,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUb,IAEpBgB,EAAO,C,SAAEH,E,MAAUb,GAAQ,GAE5BA,EAAM,G,EApBXqB,CALeX,EAAI,EAAGC,GAMnBW,MAAK,EAACT,SAAEA,EAAQb,MAAEA,OA2BvB,SAAiBa,EAAUb,GACzBM,EAAAb,GAASc,OAAOgB,QAAQ,uBAAqBV,QAAeb,M,CA3BxDwB,CAAQX,EAAUb,EAAM,IAEzByB,OAAM,EAACZ,SAAEA,EAAQb,MAAEA,OAoBxB,SAAea,EAAUb,GACvBM,EAAAb,GAASc,OAAOC,QAAQ,sBAAoBK,QAAiBb,M,CApBzD0B,CAAMb,EAAUb,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["// Завдання 3 - генератор промісів\n\nimport Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', OnClickBtn);\n\nfunction OnClickBtn(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.currentTarget.elements;\n  if (delay.value <= 0 || step.value < 0 || amount.value < 0) {\n    return Notiflix.Notify.failure('Please enter a value greater than zero', {\n      width: '300px',\n    });\n  }\n\n  for (let i = 0; i < amount.value; i += 1) {\n    const currentDelay = i * Number(step.value) + Number(delay.value);\n    startPromise(i + 1, currentDelay);\n  }\n}\n\nfunction startPromise(number, delay) {\n  createPromise(number, delay)\n    .then(({ position, delay }) => {\n      success(position, delay);\n    })\n    .catch(({ position, delay }) => {\n      error(position, delay);\n    });\n}\n\n// -------------------------------------------------------------\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction error(position, delay) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction success(position, delay) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","e","preventDefault","delay","step","amount","currentTarget","elements","value","$parcel$interopDefault","Notify","failure","width","i","currentDelay","Number","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$createPromise","then","success","$47d4ff9957288465$var$success","catch","$47d4ff9957288465$var$error"],"version":3,"file":"03-promises.996c9be2.js.map"}