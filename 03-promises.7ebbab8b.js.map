{"mappings":"iiBAEA,IAAAA,EAAAC,EAAA,SAuBA,SAASC,EAAaC,EAAQC,IAY9B,SAAuBC,EAAUD,GAC/B,OAAO,IAAIE,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUD,UAEpBI,EAAO,CAAEH,WAAUD,S,GAEpBA,E,KApBLS,CAAcV,EAAQC,GACnBU,MAAK,SAAAC,IA2BV,SAAiBV,EAAUD,GACzBY,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAsCC,OAAfd,EAAS,QAAYc,OAANf,EAAM,M,CA3BhEgB,CADeL,EAARV,SAAeU,EAALX,M,IAGlBiB,OAAM,SAAAN,IAoBX,SAAeV,EAAUD,GACvBY,EAAAhB,GAASiB,OAAOK,QAAQ,sBAAuCH,OAAfd,EAAS,QAAYc,OAANf,EAAM,M,CApBjEmB,CADgBR,EAARV,SAAeU,EAALX,M,IAzBXoB,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAEC,iBAEF,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxC3B,EAAwByB,EAAxBzB,MAAO4B,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACrB,GAAI7B,EAAM8B,OAAS,GAAKF,EAAKE,MAAQ,GAAKD,EAAOC,MAAQ,EACvD,OAAOlB,EAAAhB,GAASiB,OAAOK,QAAQ,yCAA0C,CACvEa,MAAO,UAIX,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOC,MAAOE,GAAK,EAAG,CACxC,IAAMC,EAAeD,EAAIE,OAAON,EAAKE,OAASI,OAAOlC,EAAM8B,OAC3DhC,EAAakC,EAAI,EAAGC,E","sources":["src/js/03-promises.js"],"sourcesContent":["// Завдання 3 - генератор промісів\n\nimport Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', OnClickBtn);\n\nfunction OnClickBtn(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.currentTarget.elements;\n  if (delay.value <= 0 || step.value < 0 || amount.value < 0) {\n    return Notiflix.Notify.failure('Please enter a value greater than zero', {\n      width: '300px',\n    });\n  }\n\n  for (let i = 0; i < amount.value; i += 1) {\n    const currentDelay = i * Number(step.value) + Number(delay.value);\n    startPromise(i + 1, currentDelay);\n  }\n}\n\nfunction startPromise(number, delay) {\n  createPromise(number, delay)\n    .then(({ position, delay }) => {\n      success(position, delay);\n    })\n    .catch(({ position, delay }) => {\n      error(position, delay);\n    });\n}\n\n// -------------------------------------------------------------\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction error(position, delay) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction success(position, delay) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$startPromise","number","delay","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$success","catch","failure","$ce04d3a99e08e73b$var$error","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","value","width","i","currentDelay","Number"],"version":3,"file":"03-promises.7ebbab8b.js.map"}